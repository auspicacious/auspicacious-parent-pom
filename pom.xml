<?xml version="1.0" encoding="utf-8"?>
<!--
Parent POM for all projects. This was based on this version of the Super POM:
https://maven.apache.org/ref/3.5.4/maven-model-builder/super-pom.html
Sections that did not require modification or management have been removed. Much more has been added.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.auspicacious</groupId>
  <artifactId>auspicacious-parent-pom</artifactId>
  <version>1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>org.auspicacious.auspicacious-parent-pom</name>

  <properties>
    <linkXRef>false</linkXRef><!-- https://stackoverflow.com/questions/12038238/unable-to-locate-source-xref-to-link-to -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <version.auspicacious-parent-pom-resources>1-SNAPSHOT</version.auspicacious-parent-pom-resources>
    <version.pmd>6.9.0</version.pmd>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_core</artifactId>
        <version>2.3.2</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>3.0.2</version>
      </dependency>
      <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker-qual</artifactId>
        <version>2.5.3</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>2.3.2</version>
      </dependency>
      <dependency>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-annotations</artifactId>
        <version>3.1.8</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Redefine versions for these plugins away from what's
             listed in the Super POM to avoid problems. That being
             said I'm not sure why common plugins like Surefire aren't
             in the super POM, as Maven does not seem to be
             complaining about lack of version number for those (until
             I redefined them below). -->
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.1</version>
          <dependencies>
            <!-- TODO remove this dependency once a new version of
                 maven-dependency-plugin is released that supports Java
                 11 -->
            <!-- https://issues.apache.org/jira/browse/MDEP-613 -->
            <dependency>
              <groupId>org.ow2.asm</groupId>
              <artifactId>asm</artifactId>
              <version>7.0</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.3</version>
        </plugin>
        <!-- End Super POM redefinitions -->

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M2</version>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>extra-enforcer-rules</artifactId>
              <version>1.0-beta-9</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>tidy-maven-plugin</artifactId>
          <version>1.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <configuration>
            <!-- TODO remove debug symbols from final output? -->
            <failOnError>true</failOnError>
            <failOnWarning>true</failOnWarning>
            <showDeprecation>true</showDeprecation>
            <showWarnings>true</showWarnings>
            <source>11</source>
            <target>11</target>
            <!-- The documentation claims that compilerArgs is only
                 used when fork=true. This is not true. Without
                 specifying -Xlint:all here, for instance, several
                 warnings will not be generated, even though we are
                 not using the forking compiler. -->
            <compilerArgs>
              <!-- TODO is it possible to write bellwether classes to
                   detect if any of these settings break? In other
                   words, classes that should cause errors but
                   aren't. -->
              <arg>-Xlint:all</arg>
              <!-- Can't check for compile-time processing of
                   annotations since many annotations are not
                   processed at compile time. -->
              <arg>-Xlint:-processing</arg>
              <arg>-Xdoclint:all</arg>
              <!-- TODO turn checks for missing Javadoc back on. -->
              <arg>-Xdoclint:-missing</arg>
              <!-- Use Google's ErrorProne static analysis tool. Note
                   that this implicitly forces all projects to have a
                   provided-scope dependency on the ErrorProne
                   processor. -->
              <arg>-XDcompilePolicy=simple</arg>
              <!-- The ParameterName rule is not compatible with
                   Lombok, see
                   https://github.com/google/error-prone/issues/780
              -->
              <!-- TODO determine if this modifies compiler output in
                   any way, at least by checking bytecode output -->
              <arg>-Xplugin:ErrorProne -Xep:ParameterName:OFF</arg>
            </compilerArgs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
          <configuration>
            <systemPropertyVariables>
              <!-- This is used by logback test configurations. -->
              <project.build.directory>${project.build.directory}</project.build.directory>
            </systemPropertyVariables>
            <parallel>true</parallel>
            <runOrder>random</runOrder>
            <trimStackTrace>false</trimStackTrace>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.0.0</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>8.14</version>
            </dependency>
            <dependency>
              <groupId>org.auspicacious</groupId>
              <artifactId>auspicacious-parent-pom-resources</artifactId>
              <version>${version.auspicacious-parent-pom-resources}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>3.11.0</version>
          <dependencies>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-core</artifactId>
              <version>${version.pmd}</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-java</artifactId>
              <version>${version.pmd}</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-javascript</artifactId>
              <version>${version.pmd}</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-jsp</artifactId>
              <version>${version.pmd}</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-xml</artifactId>
              <version>${version.pmd}</version>
            </dependency>
            <dependency>
              <groupId>org.auspicacious</groupId>
              <artifactId>auspicacious-parent-pom-resources</artifactId>
              <version>${version.auspicacious-parent-pom-resources}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>3.1.7</version>
          <dependencies>
            <dependency>
              <groupId>com.github.spotbugs</groupId>
              <artifactId>spotbugs</artifactId>
              <version>3.1.8</version>
            </dependency>
            <dependency>
              <groupId>org.auspicacious</groupId>
              <artifactId>auspicacious-parent-pom-resources</artifactId>
              <version>${version.auspicacious-parent-pom-resources}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.basepom.maven</groupId>
          <artifactId>duplicate-finder-maven-plugin</artifactId>
          <version>1.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>safeties</id>
      <activation>
        <property>
          <name>!disableSafeties</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>tidy-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>tidy</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <!-- Run during validate, not verify. This should fail the
                     build process as early as possible -->
                <phase>validate</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <executions>
              <execution>
                <id>checkstyle</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <configLocation>checkstyle.xml</configLocation>
                  <!-- We should only use levels error and info, warnings
                       are not helpful -->
                  <violationSeverity>warning</violationSeverity>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <executions>
              <execution>
                <!-- TODO set up namespacing rules for all Maven execution IDs to avoid collisions or accidental overrides -->
                <id>pmd</id>
                <goals>
                  <goal>check</goal>
                  <goal>cpd-check</goal>
                </goals>
                <configuration>
                  <failOnViolation>true</failOnViolation>
                  <failurePriority>5</failurePriority>
                  <rulesets>
                    <ruleset>pmd.xml</ruleset>
                  </rulesets>
                  <verbose>true</verbose>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotbugs</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <debug>true</debug>
                  <effort>max</effort>
                  <excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
                  <threshold>low</threshold>
                  <failOnError>true</failOnError>
                  <plugins>
                    <plugin>
                      <groupId>com.h3xstream.findsecbugs</groupId>
                      <artifactId>findsecbugs-plugin</artifactId>
                      <version>1.8.0</version>
                    </plugin>
                    <plugin>
                      <groupId>com.mebigfatguy.fb-contrib</groupId>
                      <artifactId>fb-contrib</artifactId>
                      <version>7.4.3.sb</version>
                    </plugin>
                  </plugins>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- TODO consider integration with https://fbinfer.com/
               somehow. This tool is not native Java and must be invoked
               from the command-line. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <banCircularDependencies />
                    <banDuplicatePomDependencyVersions />
                    <dependencyConvergence>
                      <uniqueVersions>true</uniqueVersions>
                    </dependencyConvergence>
                    <!-- TODO turn this on after support for 11 is added -->
                    <!-- https://github.com/mojohaus/extra-enforcer-rules/pull/63/files-->
                    <!-- <enforceBytecodeVersion> -->
                    <!--   <maxJdkVersion>11</maxJdkVersion> -->
                    <!-- </enforceBytecodeVersion> -->
                    <!-- <requireEncoding /> TODO this doesn't work, often guesses ISO-8859-1 instead of UTF-8 -->
                    <!-- <reactorModuleConvergence /> TODO figure out how to apply this -->
                    <requireJavaVersion>
                      <version>11.0.1</version>
                    </requireJavaVersion>
                    <requireMavenVersion>
                      <version>3.5.4</version>
                    </requireMavenVersion>
                    <requireUpperBoundDeps />
                    <!-- TODO require release versions during release -->
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.basepom.maven</groupId>
            <artifactId>duplicate-finder-maven-plugin</artifactId>
            <version>1.3.0</version>
            <executions>
              <execution>
                <id>duplicate-finder</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <failBuildInCaseOfDifferentContentConflict>true</failBuildInCaseOfDifferentContentConflict>
                  <failBuildInCaseOfEqualContentConflict>true</failBuildInCaseOfEqualContentConflict>
                  <printEqualFiles>true</printEqualFiles>
                  <!-- TODO includeBootClasspath no longer
                       works. Understand why and figure out how to fix
                       it. -->
                  <includePomProjects>true</includePomProjects>
                  <ignoredClassPatterns>
                    <ignoredClassPattern>^org.checkerframework.dataflow.qual.Deterministic$</ignoredClassPattern>
                    <ignoredClassPattern>^org.checkerframework.dataflow.qual.Pure$</ignoredClassPattern>
                    <ignoredClassPattern>^org.checkerframework.dataflow.qual.SideEffectFree$</ignoredClassPattern>
                    <ignoredClassPattern>^org.checkerframework.dataflow.qual.TerminatesExecution$</ignoredClassPattern>
                  </ignoredClassPatterns>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>dependency-plugin</id>
                <goals>
                  <goal>analyze-only</goal>
                </goals>
                <configuration>
                  <failOnWarning>true</failOnWarning>
                  <!-- Any commonly-used dependency that is typically
                       accessed in a manner that does not show up in
                       the bytecode (and so would typically cause
                       errors in projects) should be referenced
                       here. -->
                  <ignoredUnusedDeclaredDependencies>
                    <ignoredUnusedDeclaredDependency>ch.qos.logback:logback-classic:jar</ignoredUnusedDeclaredDependency>
                    <ignoredUnusedDeclaredDependency>com.google.errorprone:error_prone_core:jar</ignoredUnusedDeclaredDependency>
                    <ignoredUnusedDeclaredDependency>org.projectlombok:lombok:jar</ignoredUnusedDeclaredDependency>
                  </ignoredUnusedDeclaredDependencies>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>default-prepare-agent-integration</id>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report-integration</id>
                <goals>
                  <goal>report-integration</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- The release profile will be removed from future versions of
         the super POM. Therefore it is overwritten here to always
         fail if anyone tries to use it. -->
    <profile>
      <id>release-profile</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>block-release-profile</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <alwaysFail />
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
